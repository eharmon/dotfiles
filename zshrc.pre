#### Enable lazy loading support

source ~/.zsh/modules/zsh-defer/zsh-defer.plugin.zsh

#### Set options for grml zshrc

# We have our own function to set the title, so disable the support in grml
# TODO: This probably breaks dynamic hostname updating in the title
NOPRECMD=1

# Disable completion security checking. It's not very valuable, and we setup a
# deferred audit anyway, so we should be able to see any errors.
zstyle ':grml:completion:compinit' arguments -C

#### Profiling

function enable_profiling {
    zmodload zsh/zprof
    ZSH_PROFILE=1
    unfunction enable_profiling
}

# Uncomment to enable
#enable_profiling

#### Homebrew

# Pre-set $HOMEBREW_PREFIX. This and other settings below will be reset by the `shellenv` parse,
# but this lets us do some preliminary setup so we can use basic things from homebrew before we
# have completely loaded.
if [[ -e /opt/homebrew/bin/brew ]]; then
    HOMEBREW_PREFIX=/opt/homebrew
# Fallback for local installs on Intel
elif [[ -e ~/.homebrew/bin/brew ]]; then
    HOMEBREW_PREFIX=~/.homebrew
fi

if [[ ! -z "$HOMEBREW_PREFIX" ]]; then

    function setup_homebrew {
        eval $($HOMEBREW_PREFIX/bin/brew shellenv)
        unfunction setup_homebrew
    }

    # As above, preconfigure part of homebrew so we can use it early.
    # TODO: This is a little hacky, but it's very fast...tradeoffs.
    PATH="$HOMEBREW_PREFIX/bin:$PATH"
    FPATH="$HOMEBREW_PREFIX/share/zsh/site-functions:$FPATH"

    zsh-defer setup_homebrew
fi

#### Additional paths

# Add local bin at the end, if it exists
if [[ -d ~/bin ]]; then
    PATH=$PATH:~/bin
fi

#### Basic options we want everywhere

# Add some nice ls options
typeset -ga ls_options
ls_options=( -F )

#### Setup multiplexing

# Only multiplex for remote connections
if [[ ! -z "$SSH_TTY" ]]; then
    source ~/.zsh/zshrc.pre.tmux
    # If this chooses to start a session and works correctly, it'll never return. Otherwise continue
    # on to setup the local shell.
fi

##### Setup color scheme

if [[ -z "$SSH_TTY" ]]; then

    # Inside a function so we dont leak all these variables out of scope
    function setup_colors {
        # This will use OSC 4 escapes to configure colors in supported terminals. Only do this locally so
        # an ssh session doesn't "infect" the host with color changes.

        # Modified version of the Solarized scheme ported by Benjamin Staffin.
        # https://github.com/benley/solarized-termcolor-osc4/tree/master

        # Note that while many terminals allow custom colors, this method is universal (where supported).

        # Solarized Colors
        local base03="00/2b/36"
        local base02="07/36/42"
        local base01="58/6e/75"
        local base00="65/7b/83"
        local base0="83/94/96"
        local base1="93/a1/a1"
        local base2="ee/e8/d5"
        local base3="fd/f6/e3"
        local yellow="b5/89/00"
        local orange="cb/4b/16"
        local red="dc/32/2f"
        local magenta="d3/36/82"
        local violet="6c/71/c4"
        local blue="26/8b/d2"
        local cyan="2a/a1/98"
        local green="85/99/00"

        # Molokai colors
        local molokai_yellow="e6/db/74"
        local molokai_orange="fd/97/1f"
        local molokai_orange2="ef/59/39"
        local molokai_lightbrown="bc/a3/a3"
        local molokai_red="f9/26/72"
        local molokai_magenta="f9/26/72"
        local molokai_blue="70/70/f0"
        local molokai_violet="ae/81/ff"
        local molokai_cyan="66/d9/ef"
        local molokai_brightcyan="70/f0/f0"
        local molokai_green="a6/e2/2e"

        function cset() {
          local ANSI=$1
          local RGB=$2
          printf "\x1b]4;$ANSI;rgb:${RGB}\a"
        }

        # I prefer the default colors, so leave this out for now
        # Black
        #cset 0 $base02
        #cset 8 $base03

        # Red
        cset 1 $red
        cset 9 $orange

        # Green
        cset 2 $green
        cset 10 $molokai_green

        # Yellow
        cset 3 $yellow
        cset 11 $molokai_yellow

        # Blue
        cset 4 $blue
        cset 12 $molokai_blue

        # Magenta
        cset 5 $magenta
        cset 13 $molokai_magenta

        # Cyan
        cset 6 $cyan
        cset 14 $molokai_cyan

        # White
        cset 7 $base2
        cset 15 $base3

        unfunction cset
    }

    setup_colors
fi
